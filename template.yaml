AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Model provider

  Sample SAM Template for llm model provider

Globals:
  Function:
    Timeout: 180

Resources:
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/apigateway/modelproviderapi"
  ModelProviderApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: "prodv2"
      AccessLogSetting:
        DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "userAgent":"$context.identity.userAgent", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod", "routeKey":"$context.routeKey", "status":"$context.status", "responseLength":"$context.responseLength", "integrationLatency": "$context.integration.latency"}'
      MethodSettings:
        - LoggingLevel: INFO
          DataTraceEnabled: true
          MetricsEnabled: true
          ResourcePath: "/*"
          HttpMethod: "*"
      Auth:
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for this API
          Quota:
            Limit: 500
            Period: WEEK
          Throttle:
            BurstLimit: 100
            RateLimit: 50
  ModelProviderFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 512
      Timeout: 180
      Architectures:
        - x86_64
      Events:
        ModelInvoke:
          Type: Api
          Properties:
            RestApiId: 
              Ref: ModelProviderApi
            Path: /model
            Method: post
            Auth:
              ApiKeyRequired: true
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-south-1:010526271896:secret:AnthropicAPIKey-yZA5FJ
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-south-1:010526271896:secret:GeminiAPIKey-cs2C4o
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-south-1:010526271896:secret:OpenAIAPIKey-TwhZXt
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-south-1:010526271896:secret:AzureAIFoundaryAPIKey-pcen0r
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-south-1:010526271896:secret:AzureAIFoundaryEndpoint-fxPLMP
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:ap-south-1:010526271896:secret:AzureAIFoundaryAPIVersion-YWzCgG
        - Statement:
           Effect: Allow
           Action: bedrock:InvokeModel
           Resource: "*"
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogGroups,
                - logs:DescribeLogStreams,
                - logs:GetLogEvents,
                - logs:FilterLogEvents
              Resource: !GetAtt ApiGatewayLogGroup.Arn
           
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./provider
      DockerTag: latest

Outputs:
  ModelProviderApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ModelProviderApi}.execute-api.${AWS::Region}.amazonaws.com/ProdV2/model/"